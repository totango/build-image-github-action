name: 'Build Image'
description: 'Build tag and push images to AWS ECR'

inputs:
  aws_user_id:
    description: 'AWS user access key id'
    required: true
  aws_user_secret:
    description: 'AWS user access key secret'
    required: true
  service_name:
    description: 'Service name'
    required: true
  npm_token:
    description: 'npm_token'
    required: true

outputs:
  version:
    description: "Image version"
    value: ${{ steps.vars.outputs.sha_short }}
runs:
  using: "composite"
  steps:
    - name: compute short sha and current time
      id: vars
      shell: bash
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        echo "::set-output name=current_time::$(date +%s%N)"
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws_user_id }}
        aws-secret-access-key: ${{ inputs.aws_user_secret }}
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: echo version name
      shell: bash
      run: |
        echo ${{ steps.vars.outputs.sha_short }}
    - name: Build, tag, and push image to Amazon ECR
      shell: bash
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.service_name }}
        IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG --no-cache --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }} --build-arg BRANCH_NAME=develop .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        aws dynamodb put-item --table-name versions-mgmt --item "{\"service\": {\"S\": \"${{inputs.service_name}}\"}, \"version\": {\"S\": \"${{ steps.vars.outputs.sha_short }}\"}, \"timestamp\": {\"N\": \"${{ steps.vars.outputs.current_time }}\"}}" --region us-east-1